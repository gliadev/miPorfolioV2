[
  {
    "id": "SwiftSnake",
    "title": "SwiftSnake",
    "category": "ios",
    "description": "SwiftSnake es una versión moderna del clásico juego Snake, desarrollada íntegramente con SwiftUI y SwiftData. Implementa una arquitectura MVVM para separar la lógica del juego de la vista y del almacenamiento de datos. Incluye ranking persistente con SwiftData, detección de colisiones, control de movimiento fluido y un HUD dinámico con puntuación en tiempo real. El juego está optimizado para iPhone y iPad",
    "tech": ["Swift", "SwiftUI", "SwiftData", "MVVM", "Testing"],
    "image": "/proyectsPhotos/swiftSnake.png",
    "links": {
      "github": "https://github.com/gliadev/swiftSnake",
      "store": "",
      "website": "",
      "demos": [
        "/proyectsDemos/demoSwiftSnake.gif", ""
      ]
    }
  },
  
  {
    "id": "TheMangaKeeper",  
    "title": "The MangaKeeper",
    "category": "ios",
    "description": "Proyecto Final del Swift Developer Program 2023 de, Aplicación iOS para gestionar colecciones de mangas. Permite consultar un catálogo, añadir mangas a tu colección, registrar progreso de lectura y filtrar por géneros, temas o demografías. Optimizada para iPhone y iPad con un diseño adaptado y navegación avanzada.",
    "tech": ["Swift", "SwiftUI", "MVVM", "REST API"],
    "image": "../proyectsPhotos/TheMangaKeeper.png",
    "links": {
      "github": "https://github.com/tu-repo/TheMangaKeeper",
      "store": "",
      "website": "",
      "demos": [
        "https://raw.githubusercontent.com/gliadev/TheMangaKeeper/main/gifs/Simulator%20Screen%20Recording%20-%20iPhone%2016%20-%202024-11-05%20at%2010.41.42.gif",
        
        "https://raw.githubusercontent.com/gliadev/TheMangaKeeper/main/gifs/Simulator%20Screen%20Recording%20-%20iPad%20(10th%20generation)%20-%202024-11-05%20at%2010.29.35.gif"
      ]
    }
  },
  {
    "id": "employees",
    "title": "Employees",
    "category": "ios",
    "description": "Employees es una aplicación iOS desarrollada con SwiftUI que consume una API REST para mostrar un listado de empleados de una empresa ficticia. Implementa arquitectura MVVM con un patrón Interactor para gestionar las peticiones de red de forma asíncrona usando async/await. Permite buscar empleados por nombre en tiempo real, visualizar sus detalles y manejar errores de red y decodificación de forma controlada. Incluye separación entre capas DTO y dominio, y un formateo automático de nombres mediante PersonNameComponentsFormatter."
,
    "tech": ["Swift", "SwiftUI", "MVVM", "API", "Async/Await"],
    "image": "/proyectsPhotos/Employees.png",
    "links": {
      "github": "https://github.com/gliadev/EmployeesAPP",
      "store": "",
      "website": "",
      "demos": ["",""]
    }
  },
  {
    "id": "tmdb",
    "title": "TheMovieDB Proyect",
    "category": "ios",
    "description": "Aplicación iOS que consume la API de The Movie Database (TMDB) para mostrar el Top 10 de películas. Incluye vista de detalle, reparto con enlaces a Wikipedia y tráilers de YouTube. Implementada en SwiftUI bajo arquitectura MVVM, con autenticación mediante Bearer Token y peticiones asíncronas async/await",
    "tech": ["Swift", "SwiftUI", "MVVM", "TMDB API", "Async/Await", "Token"],
    "image": "/proyectsPhotos/TheMovieDBProyect.png",
    "links": {
      "github": "https://github.com/gliadev/TheMovieBDProject",
      "store": "",
      "website": "",
      "demos": ["proyectsDemos/demoTheMovieDB.gif"]
    }
  },
  {
    "id": "portfolio-new",
    "title": "Mi Portfolio (v2)",
    "category": "web",
    "description": "Segunda versión de mi portafolio personal, completamente rediseñada con un stack moderno basado en React + TailwindCSS y Framer Motion para animaciones fluidas. Incluye modo oscuro/claro, un sistema dinámico de proyectos que consume datos desde un archivo JSON (evitando la repetición de código y facilitando la escalabilidad), y una interfaz mucho más visual e interactiva. Totalmente responsive y optimizado para móviles, mejora la experiencia en pantallas táctiles con transiciones suaves, efectos animados y componentes reutilizables.Desplegado en Vercel, este portfolio refleja mi evolución como desarrollador y mi enfoque en diseño, rendimiento y accesibilidad.",
    "tech": ["React", "TailwindCSS", "Framer Motion", "JavaScript", "Responsive Design", "Dark Mode"],
    "image": "/proyectsPhotos/miPorfolioV2.png",
    "links": {
      "github": "https://github.com/gliadev/miPorfolioV2",
      "store": "",
      "website": "https://gliadev.vercel.app/",
      "demos": []
    }
  },
  {
    "id": "portfolio-old",
    "title": "Mi Portfolio (v1)",
    "category": "web",
    "description": "Primer portfolio personal desarrollado con HTML, CSS y JavaScript, donde presento mis proyectos, habilidades y trayectoria profesional. Incluye animaciones, una galería de proyectos y una línea temporal de formación. Publicado en GitHub Pages como punto de partida en mi camino aldesarrollo. ",
    "tech": ["HTML", "CSS", "JavaScript", "Bootstrap", "Animate.css", "WOW.js"],
    "image": "/proyectsPhotos/porfolio.png",
    "links": {
      "github": "https://github.com/gliadev/miPorfolio",
      "store": "",
      "website": "https://gliadev.github.io/miPorfolio/",
      "demos": []
    }
  },
  {
    "id": "nutriglesias",
    "title": "Nutriglesias Web",
    "category": "web",
    "description": "Sitio web profesional de nutrición que ofrece servicios personalizados para deportistas y personas con objetivos específicos. Incluye secciones de servicios, blog de contenido nutricional, presentación del equipo y formulario de contacto. Está optimizado para visibilidad en diseño responsivo en móvil o escritorio y SEO local.",
    "tech": ["HTML", "CSS", "Bootstrap", "JavaScript", "Responsive Design", "SEO On-Page"],
    "image": "/proyectsPhotos/webNutriglesias.png",
    "links": {
      "github": "",
      "store": "",
      "website": "https://www.nutriglesias.com/",
      "demos": []
    }
  },
  {
    "id": "nutriapp",
    "title": "NutriApp",
    "category": "web",
    "description": "Aplicación web full-stack para consulta nutricional. Gestiona clientes, citas y progreso con React en el frontend y Node/Express + MongoDB en el backend. Autenticación JWT, CRUD completo y despliegue con entorno de producción (Mongo Atlas)",
    "tech": ["React", "Node.js", "Express", "MongoDB", "JWT", "REST API"],
    "image": "/proyectsPhotos/nutriAPP.png",
    "links": {
      "github": "https://github.com/gliadev/nutriapp",
      "store": "",
      "website": "",
      "demos": []
    }
  },

  {
    "id": "checkzea",
    "title": "CheckZea",
    "category": "ios",
    "description": "in progress...",
    "tech": [],
    "image": "",
    "links": {
      "github": "",
      "store": "",
      "website": "",
      "demos": []
    }
  }
]
